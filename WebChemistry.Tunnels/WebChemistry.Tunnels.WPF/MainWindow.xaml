<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:TunnelControls="clr-namespace:WebChemistry.Tunnels.WPF.Controls"
        xmlns:local="clr-namespace:WebChemistry.Tunnels.WPF"
        xmlns:extToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"  
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
		xmlns:System="clr-namespace:System;assembly=mscorlib" 
		mc:Ignorable="d" x:Class="WebChemistry.Tunnels.WPF.MainWindow"
        Title="MOLE"  
        Height="600"
        Width="920"
        Closed="Window_Closed">
     
	<Window.Resources>
		<Style x:Key="BusyIndicatorStyle1" TargetType="{x:Type extToolkit:BusyIndicator}">
			<Setter Property="BusyContent" Value="Please wait..."/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="OverlayStyle">
				<Setter.Value>
					<Style TargetType="{x:Type Rectangle}">
						<Setter Property="Fill" Value="White"/>
						<Setter Property="Opacity" Value="0.5"/>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="ProgressBarStyle">
				<Setter.Value>
					<Style TargetType="{x:Type ProgressBar}">
						<Setter Property="IsIndeterminate" Value="True"/>
						<Setter Property="Height" Value="15"/>
						<Setter Property="Margin" Value="8,0,8,8"/>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="DisplayAfter" Value="0:0:0.1"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type extToolkit:BusyIndicator}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="VisibilityStates">
									<VisualState x:Name="Hidden">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Collapsed</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Collapsed</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Visible">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="BusyStatusStates">
									<VisualState x:Name="Idle">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="content">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>True</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Busy">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="content">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>False</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}"/>
							<ContentPresenter x:Name="busycontent">
								<ContentPresenter.Content>
									<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
										<Border BorderThickness="0" Background="#FF999999" CornerRadius="2" BorderBrush="#FF323232">
											<Border CornerRadius="1.5" Margin="1" Background="#FF696969">
												<Grid MinWidth="150">
													<Grid.RowDefinitions>
														<RowDefinition/>
														<RowDefinition Height="Auto"/>
													</Grid.RowDefinitions>
													<ContentPresenter ContentTemplate="{TemplateBinding BusyContentTemplate}" Content="{TemplateBinding BusyContent}" Margin="8"/>
													<ProgressBar Grid.Row="1" Style="{TemplateBinding ProgressBarStyle}"/>
												</Grid>
											</Border>
										</Border>
									</Grid>
								</ContentPresenter.Content>
							</ContentPresenter>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
     
    <!--Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources-->

	<Window.DataContext>
		<Binding Path="Main" Source="{StaticResource Locator}"/>
	</Window.DataContext>

    <Grid x:Name="LayoutRoot" Background="#FF202020">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="SplashStates">
    			<VisualState x:Name="Normal">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="WelcomeScreen">
    						<DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Collapsed}"/>
    					</ObjectAnimationUsingKeyFrames>
    					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="WelcomeScreen">
    						<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
    					</DoubleAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>        
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

        <Border Background="{StaticResource LightBrush}" CornerRadius="0 0 0 0" Margin="0 0 0 0" HorizontalAlignment="Stretch">
        	<Grid>
	        	<StackPanel Orientation="Horizontal">
	        		<Button Style="{StaticResource HyperlinkButton}" Click="OpenButtonClick"  Padding="5, 2" Content="Load" ToolTip="Open a PDB file on the disk."/>
					<Rectangle Fill="#FFEEEEEE" Width="1" Stroke="{x:Null}" Margin="4 4" />
	           <Grid Margin="0 2 2 2">
	                    <Grid.ColumnDefinitions>
	                        <ColumnDefinition/>
	                        <ColumnDefinition Width="Auto"/>
	                        <ColumnDefinition Width="Auto"/>
	                    </Grid.ColumnDefinitions>	                    
	                    <TextBox Background="#FF484848" Margin="4,0,0,0" Grid.Column="1" BorderBrush="{x:Null}" Padding="0" Width="50" Text="{Binding PdbDownloadName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyUp="DownloadNameInner_KeyUp" />
	                    <Button Style="{StaticResource HyperlinkButton}" Margin="0,0,0,0" Grid.Column="2" Padding="5, 2" Content="Download" ToolTip="Download a protein from PDB.org." Click="DownloadButtonClick" />
	            </Grid>  
				<Rectangle Fill="#FFEEEEEE" Width="1" Stroke="{x:Null}" Margin="4 4" Visibility="Collapsed" />
				<Button Style="{StaticResource HyperlinkButton}" Margin="1 2 5 2" Padding="5, 2" Content="Compare Tunnels" ToolTip="Compare tunnels from different molecules." Click="CompareButtonClick" Visibility="Collapsed" />
				<Rectangle Fill="#FFEEEEEE" Width="1" Stroke="{x:Null}" Margin="0 4 10 4" />
				<TextBlock Text="Workspace:" VerticalAlignment="Center" Foreground="#FFADADAD" Margin="0 0 6 0" />
				<Button Style="{StaticResource HyperlinkButton}" Margin="0 2 0 2" Padding="5, 2" Content="Load" ToolTip="Loads a workspace from a file." Click="LoadButtonClick" />
				<Button Style="{StaticResource HyperlinkButton}" Margin="0 2 5 2" Padding="5, 2" Content="Save" ToolTip="Saves the current workspace so that it can be restored later." Click="SaveButtonClick" />
				</StackPanel>
				
				<Button Style="{StaticResource HyperlinkButton}" Margin="2 2 5 2" Padding="5, 2" Content="About" Click="AboutButtonClick" HorizontalAlignment="Right" />
			</Grid>
        </Border>
		
		<Border Background="{StaticResource LightBrush}" CornerRadius="5 0 0 0" Margin="0 0 0 0" HorizontalAlignment="Right" Visibility="Collapsed" >
           <Grid Margin="2 2 2 2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
						<ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="2 0 0 0" Text="{Binding CollaborationSession.Status, FallbackValue=Not Connected, Mode=OneWay}" VerticalAlignment="Center" />
					<TextBox Background="#FF484848" 
						Margin="5,0,0,0" 
						Grid.Column="1" BorderBrush="{x:Null}" 
						Padding="0" 
						MaxWidth="150"
						Text="{Binding CollaborationUrl, FallbackValue=ws://localhost:4503/CollaborationService, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Button Style="{StaticResource HyperlinkButton}" Margin="5,0,0,0" Grid.Column="2" Padding="5, 2" Content="Subscribe" ToolTip="Subscribe to a collaboration session..." 
						Command="{Binding SubscribeCommand, Mode=OneTime}" />
                </Grid>   
        </Border>

        <ad:DockingManager Grid.Row="1" x:Name="DockingManager" Padding="0">
            <ad:ResizingPanel Orientation="Vertical">
                <ad:DocumentPane Visibility="Visible"/>
            </ad:ResizingPanel>
        </ad:DockingManager>

        <extToolkit:BusyIndicator Grid.RowSpan="2" IsBusy="{Binding BusyIndication.IsBusy, Mode=OneWay}" DisplayAfter="00:00:00.05000000" Style="{DynamicResource BusyIndicatorStyle1}">
            <extToolkit:BusyIndicator.BusyContent>
                <Grid Width="180" Margin="5 2 5 2">
                    <TextBlock Foreground="White" HorizontalAlignment="Left" Text="{Binding BusyIndication.StatusText, Mode=OneWay}"  />
                    <TextBlock HorizontalAlignment="Right" Foreground="White"><Run Text="{Binding BusyIndication.TimeElapsed, Mode=OneWay}" /></TextBlock>
                </Grid>
            </extToolkit:BusyIndicator.BusyContent>
			<extToolkit:BusyIndicator.OverlayStyle>
				<Style TargetType="{x:Type Rectangle}">
					<Setter Property="Fill" Value="#CC323232" />
				</Style>
			</extToolkit:BusyIndicator.OverlayStyle>
        </extToolkit:BusyIndicator>
		
		<Grid x:Name="WelcomeScreen" Grid.RowSpan="2">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="190" />
					<RowDefinition />
				</Grid.RowDefinitions>
				<Rectangle Opacity="1" >
					<Rectangle.Fill>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FF222222" Offset="0"/>
							<GradientStop Color="#FF525252" Offset="1"/>
						</LinearGradientBrush>
					</Rectangle.Fill>
				</Rectangle>
				<Rectangle Grid.Row="1" Opacity="1" Fill="#FF292929" />
                <Image Width="150" Height="150" VerticalAlignment="Top"  Margin="0 25 0 0" Source="/WebChemistry.Tunnels.WPF;component/molelogo.png" />
			</Grid>
    		<!--Rectangle Opacity="1" Fill="#FF292929" /-->
			
			<!--Image Source="Images/Logo.png" Width="100" HorizontalAlignment="Right" VerticalAlignment="Bottom"  /-->
			
    		<Border VerticalAlignment="Top" HorizontalAlignment="Center" Padding="0" Width="333" Margin="0 158 0 0">

    			<StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" SnapsToDevicePixels="True">			
    				<Border CornerRadius="5,5,0,0" BorderThickness="0" BorderBrush="#FF525252">
    					<StackPanel Margin="10,5,10,5" Orientation="Horizontal" HorizontalAlignment="Center">
    						<TextBlock VerticalAlignment="Center" FontWeight="Bold" FontSize="16" TextAlignment="Right" Foreground="White" SnapsToDevicePixels="False"><Run FontStyle="Italic" Text="MOLE"/><Run Text=" "/><Run x:Name="versionString" Text="version" Foreground="#FF999999" FontSize="12" FontWeight="Normal" FontStyle="Italic" /></TextBlock>
    					</StackPanel>
    				</Border>
					
    				<Border Padding="10 10 10 6" HorizontalAlignment="Stretch" CornerRadius="0 0 5 5" BorderBrush="#FF525252">										
    					<StackPanel>
						
    						<StackPanel Orientation="Vertical" Margin="0,0,0,4" HorizontalAlignment="Left">
    							<StackPanel Orientation="Horizontal">
    								<Button Width="80" Background="#FF595959" FontWeight="Bold" Margin="0,0,6,0" Padding="8,2" Cursor="Hand" Content="Open" Click="OpenButtonClick">
    									<i:Interaction.Triggers>
    										<i:EventTrigger EventName="Click">
    											<ei:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
    											<ei:GoToStateAction StateName="Normal"/>
    										</i:EventTrigger>
    									</i:Interaction.Triggers>
    								</Button>
    								<TextBlock SnapsToDevicePixels="True" Margin="3 0 0 0" Foreground="White" FontWeight="Bold" VerticalAlignment="Center"><Run Text="a structure from your hard drive."/></TextBlock>
    							</StackPanel>								
								<StackPanel Orientation="Horizontal" Margin="0 8 0 0">
    								<Button Width="80" Background="#FF595959" FontWeight="Bold" Margin="0,0,6,0" Padding="8,2" Cursor="Hand" Content="Load" Click="LoadButtonClick">
    									<i:Interaction.Triggers>
    										<i:EventTrigger EventName="Click">
    											<ei:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
    											<ei:GoToStateAction StateName="Normal"/>
    										</i:EventTrigger>
    									</i:Interaction.Triggers>
    								</Button>
    								<TextBlock SnapsToDevicePixels="True" Margin="3 0 0 0" Foreground="White" FontWeight="Bold" VerticalAlignment="Center"><Run Text="a previously saved workspace."/></TextBlock>
    							</StackPanel>
    							<StackPanel Orientation="Horizontal" Margin="0 8 0 0">
    								<Button Width="80" Click="DownloadButtonClick" Background="#FF595959" Cursor="Hand" FontWeight="Bold" Margin="0,0,6,0" Padding="8,2" Content="Download" x:Name="DownloadButton">
    									<i:Interaction.Triggers>
    										<i:EventTrigger EventName="Click">
    											<ei:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
    											<ei:GoToStateAction StateName="Normal"/>
    										</i:EventTrigger>
    									</i:Interaction.Triggers>
    								</Button>
    								<TextBox Background="#FF484848" Margin="0,0,0,0" BorderBrush="{x:Null}" Padding="0" Width="50" Text="{Binding PdbDownloadName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             KeyUp="DownloadProteinName_KeyUp" />
    								<TextBlock Margin="5 0 0 0" Foreground="White" FontWeight="Bold" VerticalAlignment="Center"><Run Text="from the PDB Database."/></TextBlock>
    							</StackPanel>
    						</StackPanel>
						
    					</StackPanel>				
    				</Border>				
    			</StackPanel>	
    		</Border>		
    	</Grid>
    </Grid>
</Window>
