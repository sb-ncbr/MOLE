<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:WebChemistry.Tunnels.WPF.ViewModel"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:extToolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended" xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="WebChemistry.Tunnels.WPF.App"
             xmlns:local="clr-namespace:WebChemistry.Tunnels.WPF"
             StartupUri="MainWindow.xaml"
             mc:Ignorable="d">
    
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/ExpressionDark.xaml" />
                <ResourceDictionary Source="/AvalonDock.Themes;component/themes/ExpressionDark.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />

            <local:BooleanToVisibilityConverter x:Key="boolVisibilityConverter" />
            <local:EnumToBoolConverter x:Key="enumToBoolConverter" />

            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
            </Style>
            
            
            <Style x:Key="ResidueToggleButton" TargetType="{x:Type ToggleButton}">
            	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
            	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
            	<Setter Property="BorderThickness" Value="1" />
            	<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
				<Setter Property="FontFamily" Value="Courier New" />
            	<Setter Property="HorizontalContentAlignment" Value="Center" />
            	<Setter Property="VerticalContentAlignment" Value="Center" />
            	<Setter Property="Padding" Value="1" />
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="{x:Type ToggleButton}">
            				<ControlTemplate.Resources>
            					<Storyboard x:Key="HoverOn">
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
									<BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="DataContext.IsHighlighted">
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0" />
                                    </BooleanAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="HoverOff">
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
									<BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="DataContext.IsHighlighted">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0" />
                                    </BooleanAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="CheckedOn">
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="CheckedOff">
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="PressedOn">
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            					<Storyboard x:Key="PressedOff">
            						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
            							<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</ControlTemplate.Resources>
            				<Grid x:Name="grid">

            					<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="Transparent" CornerRadius="0" />
            					<Border x:Name="CheckedBorder" BorderThickness="0" Background="Red" CornerRadius="0" Opacity="0" />
            					<Border x:Name="HoverBorder" BorderThickness="0" CornerRadius="0" Opacity="0" Background="{DynamicResource HoverBrush}" />
            					<Border x:Name="HoverShineBorder" BorderThickness="0" CornerRadius="0" Opacity="0" Background="{DynamicResource HoverShineBrush}" />
 	           					<Border x:Name="Pressed" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource PressedBorderBrush}" CornerRadius="0" Opacity="0" Background="{DynamicResource PressedBrush}" />
            					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1, 0" />
            				</Grid>

            				<ControlTemplate.Triggers>
            					<Trigger Property="IsMouseOver" Value="True">
            						<Trigger.ExitActions>
            							<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsPressed" Value="True">
            						<Trigger.ExitActions>
            							<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsKeyboardFocused" Value="true"/>
            					<Trigger Property="IsChecked" Value="true">
            						<Trigger.ExitActions>
            							<BeginStoryboard Storyboard="{StaticResource CheckedOff}" x:Name="CheckedOff_BeginStoryboard"/>
            						</Trigger.ExitActions>
            						<Trigger.EnterActions>
            							<BeginStoryboard Storyboard="{StaticResource CheckedOn}" x:Name="CheckedOn_BeginStoryboard"/>
            						</Trigger.EnterActions>
            					</Trigger>
            					<Trigger Property="IsEnabled" Value="false">
            						<Setter Property="Foreground" Value="#ADADAD" />
            						<Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
            						<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
            						<Setter Property="Opacity" TargetName="grid" Value="0.5"/>
            					</Trigger>
            				</ControlTemplate.Triggers>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
        </ResourceDictionary>       
    </Application.Resources>
    
</Application>
